<appendix xml:id="Appendix_RM_Config"
          xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Resource Managers Configuration</title>
  <para>
    This book contains many examples related to LIXA usage, most of them
    require a proper configuration for the Resource Managers that must
    participate in the distributed transactions proposed by the examples.
    This appendix contains the required configurations and step by step
    explanation to help the set-up.
  </para>
  <note><para>
    The same configurations necessary to execute the examples, are used even
    by the test cases provided by LIXA.
  </para></note>
  <note><para>
    This appendix does <emphasis>not</emphasis> provide information related to
    the standard installation and configuration operations necessary for run
    a specific Resource Manager: only LIXA related configurations are
    explained.
  </para></note>
  <section xml:id="App_RM_Config_MySQL">
    <title>MySQL/MariaDB Configuration</title>
    <para>
      The following diagram represents a simplified vision of the components
      necessary to run an example program (<filename>example8_mys</filename>
      in the picture) that uses MySQL as an XA Resource Manager.
    </para>
    <figure xml:id="develop8">
      <title>Deploy model of an example with MySQL/MariaDB DBMS</title>
      <mediaobject>
	<imageobject>
	  <imagedata fileref="../images/LIXA_App_RM_8.png"/>
	</imageobject>
      </mediaobject>
    </figure>
    <para>
      This section has been developed using MySQL 5.5.54 (or upper) and
      MariaDB 5.5.52 for Linux. 
      Here is a brief list of the tested versions for Ubuntu 12.04,
      14.04, 16.04, 18.04 and CentOS/RHEL 7.3, CentOS 8 and the installed
      packages:
      <screen>
tiian@ubuntu1204-64:~$ dpkg -l | grep -i mysql
ii  libdbd-mysql-perl                4.020-1ubuntu0.1                    Perl5 database interface to the MySQL database
ii  libmysqlclient-dev               5.5.54-0ubuntu0.12.04.1             MySQL database development files
ii  libmysqlclient18                 5.5.54-0ubuntu0.12.04.1             MySQL database client library
ii  mysql-client-5.5                 5.5.54-0ubuntu0.12.04.1             MySQL database client binaries
ii  mysql-client-core-5.5            5.5.54-0ubuntu0.12.04.1             MySQL database core client binaries
ii  mysql-common                     5.5.54-0ubuntu0.12.04.1             MySQL database common files, e.g. /etc/mysql/my.cnf
ii  mysql-server                     5.5.54-0ubuntu0.12.04.1             MySQL database server (metapackage depending on the latest version)
ii  mysql-server-5.5                 5.5.54-0ubuntu0.12.04.1             MySQL database server binaries and system database setup
ii  mysql-server-core-5.5            5.5.54-0ubuntu0.12.04.1             MySQL database server binaries

tiian@ubuntu1404-64:~$ dpkg -l | grep -i mysql
ii  libdbd-mysql-perl                   4.025-1ubuntu0.1                    amd64        Perl5 database interface to the MySQL database
ii  libmysqlclient-dev                  5.5.54-0ubuntu0.14.04.1             amd64        MySQL database development files
ii  libmysqlclient18:amd64              5.5.54-0ubuntu0.14.04.1             amd64        MySQL database client library
ii  mysql-client-5.5                    5.5.54-0ubuntu0.14.04.1             amd64        MySQL database client binaries
ii  mysql-client-core-5.5               5.5.54-0ubuntu0.14.04.1             amd64        MySQL database core client binaries
ii  mysql-common                        5.5.54-0ubuntu0.14.04.1             all          MySQL database common files, e.g. /etc/mysql/my.cnf
ii  mysql-server                        5.5.54-0ubuntu0.14.04.1             all          MySQL database server (metapackage depending on the latest version)
ii  mysql-server-5.5                    5.5.54-0ubuntu0.14.04.1             amd64        MySQL database server binaries and system database setup
ii  mysql-server-core-5.5               5.5.54-0ubuntu0.14.04.1             amd64        MySQL database server binaries

tiian@ubuntu1604:~$ dpkg -l | grep -i mysql
ii  libmysqlclient-dev                 5.7.17-0ubuntu0.16.04.1             amd64        MySQL database development files
ii  libmysqlclient20:amd64             5.7.17-0ubuntu0.16.04.1             amd64        MySQL database client library
ii  mysql-client-5.7                   5.7.17-0ubuntu0.16.04.1             amd64        MySQL database client binaries
ii  mysql-client-core-5.7              5.7.17-0ubuntu0.16.04.1             amd64        MySQL database core client binaries
ii  mysql-common                       5.7.17-0ubuntu0.16.04.1             all          MySQL database common files, e.g. /etc/mysql/my.cnf
ii  mysql-server                       5.7.17-0ubuntu0.16.04.1             all          MySQL database server (metapackage depending on the latest version)
ii  mysql-server-5.7                   5.7.17-0ubuntu0.16.04.1             amd64        MySQL database server binaries and system database setup
ii  mysql-server-core-5.7              5.7.17-0ubuntu0.16.04.1             amd64        MySQL database server binaries

Last login: Sat May 12 17:29:32 2018 from 192.168.122.1
tiian@ubuntu1804:~$ dpkg -l | grep -i mysql
ii  libmysqlclient-dev                    5.7.22-0ubuntu18.04.1              amd64        MySQL database development files
ii  libmysqlclient20:amd64                5.7.22-0ubuntu18.04.1              amd64        MySQL database client library
ii  mysql-client-5.7                      5.7.22-0ubuntu18.04.1              amd64        MySQL database client binaries
ii  mysql-client-core-5.7                 5.7.22-0ubuntu18.04.1              amd64        MySQL database core client binaries
ii  mysql-common                          5.8+1.0.4                          all          MySQL database common files, e.g. /etc/mysql/my.cnf
ii  mysql-server                          5.7.22-0ubuntu18.04.1              all          MySQL database server (metapackage depending on the latest version)
ii  mysql-server-5.7                      5.7.22-0ubuntu18.04.1              amd64        MySQL database server binaries and system database setup
ii  mysql-server-core-5.7                 5.7.22-0ubuntu18.04.1              amd64        MySQL database server binaries

[tiian@centos71-64 ~]$ rpm -qa | grep -i maria
mariadb-5.5.52-1.el7.x86_64
mariadb-server-5.5.52-1.el7.x86_64
mariadb-libs-5.5.52-1.el7.x86_64
mariadb-devel-5.5.52-1.el7.x86_64

[tiian@rhel73 ~]$ rpm -qa | grep -i maria
mariadb-devel-5.5.52-1.el7.x86_64
mariadb-5.5.52-1.el7.x86_64
mariadb-server-5.5.52-1.el7.x86_64
mariadb-libs-5.5.52-1.el7.x86_64

[tiian@centos8 tmp]$ rpm -qa | grep -i maria
mariadb-gssapi-server-10.3.17-1.module_el8.1.0+257+48736ea6.x86_64
mariadb-connector-c-3.0.7-1.el8.x86_64
mariadb-10.3.17-1.module_el8.1.0+257+48736ea6.x86_64
mariadb-common-10.3.17-1.module_el8.1.0+257+48736ea6.x86_64
mariadb-errmsg-10.3.17-1.module_el8.1.0+257+48736ea6.x86_64
mariadb-server-10.3.17-1.module_el8.1.0+257+48736ea6.x86_64
mariadb-connector-c-config-3.0.7-1.el8.noarch
mariadb-server-utils-10.3.17-1.module_el8.1.0+257+48736ea6.x86_64
mariadb-devel-10.3.17-1.module_el8.1.0+257+48736ea6.x86_64
mariadb-connector-c-devel-3.0.7-1.el8.x86_64
mariadb-backup-10.3.17-1.module_el8.1.0+257+48736ea6.x86_64
mariadb-java-client-2.2.5-2.el8.noarch
      </screen>
      If you were using a different version you would need to adapt some
      commands to your environment.
    </para>
    <note><para>
	If you did not yet installed the software, please refer to the 
	official site for your Linux distribution or to the official site
	of MySQL/MariaDB if your operating system does not distribute the
	software or you want to use a different MySQL/MariaDB version.
	This manual does not give you information related
	to MySQL/MariaDB: it is assumed that you have already installed and
	configured the database.
    </para></note>
    <note><para>
	This example requires you are running the database and the application
	on the same host: this is not a technical limitation, but a way to
	make it easy. Client/server configuration must work as well, but
	it needs some MySQL/MariaDB extra configuration: please refer to the
	database documentation.
    </para></note>
    <important><para>
	The LIXA software must be configured to support the MySQL/MariaDB
	server resource manager as explained in 
	<xref linkend="Linking_third_party_resource_managers"/>.
    </para></important>
    <section xml:id="App_RM_setup_MySQL_environment_">
      <title>Set-up MySQL environment</title>
      <section>
	<title>Start-up the MySQL server</title>
	<para>
	  If your server didn't start-up automatically at boot time, you
	  could start it with the following commands for Ubuntu:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
tiian@ubuntu1204-64:/tmp$ sudo service mysql start
mysql start/running, process 1607
tiian@ubuntu1204-64:/tmp$ sudo service mysql status
mysql start/running, process 1607
tiian@ubuntu1204-64:/tmp$ ps -ef|grep mysql|grep -v grep
mysql     1607     1  0 22:43 ?        00:00:00 /usr/sbin/mysqld
	    </screen></td></tr></tbody>
	  </table>
	  or the following commands for CentOS:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
[tiian@centos8 tmp]$ sudo systemctl start mariadb
[tiian@centos8 tmp]$ sudo systemctl status mariadb
‚óè mariadb.service - MariaDB 10.3 database server
   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; enabled; vendor preset: disabled)
   Active: active (running) since Sun 2020-10-11 15:08:59 CEST; 57s ago
     Docs: man:mysqld(8)
           https://mariadb.com/kb/en/library/systemd/
  Process: 2013 ExecStartPost=/usr/libexec/mysql-check-upgrade (code=exited, status=0/SUCCESS)
  Process: 1944 ExecStartPre=/usr/libexec/mysql-prepare-db-dir mariadb.service (code=exited, status=0/SUCCESS)
  Process: 1919 ExecStartPre=/usr/libexec/mysql-check-socket (code=exited, status=0/SUCCESS)
 Main PID: 1982 (mysqld)
   Status: "Taking your SQL requests now..."
    Tasks: 30 (limit: 11477)
   Memory: 73.1M
   CGroup: /system.slice/mariadb.service
           ‚îî‚îÄ1982 /usr/libexec/mysqld --basedir=/usr

Oct 11 15:08:58 centos8 systemd[1]: Starting MariaDB 10.3 database server...
Oct 11 15:08:59 centos8 mysql-prepare-db-dir[1944]: Database MariaDB is probably initialized in /var/lib/mysql already, nothing is done.
Oct 11 15:08:59 centos8 mysql-prepare-db-dir[1944]: If this is not the case, make sure the /var/lib/mysql is empty before running mysql-prepare-db-dir.
Oct 11 15:08:59 centos8 mysqld[1982]: 2020-10-11 15:08:59 0 [Note] /usr/libexec/mysqld (mysqld 10.3.17-MariaDB) starting as process 1982 ...
Oct 11 15:08:59 centos8 systemd[1]: Started MariaDB 10.3 database server.
[tiian@centos8 tmp]$ ps -ef | grep mysql|grep -v grep
mysql       1982       1  1 15:08 ?        00:00:00 /usr/libexec/mysqld --basedir=/usr
	    </screen></td></tr></tbody>
	  </table>
	  Create a new user authorization and a new database
	  <footnote><para>
	    You need the password of MySQL root user to execute
	    these commands.
	  </para></footnote>:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
tiian@ubuntu1204-64:/tmp$ mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 36
Server version: 5.5.54-0ubuntu0.12.04.1 (Ubuntu)

Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> GRANT ALL ON lixa.* TO 'lixa'@'localhost';
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE DATABASE lixa;
Query OK, 1 row affected (0.00 sec)

mysql> quit
Bye
	    </screen></td></tr></tbody>
	  </table>
	  On newest systems like for example Ubuntu 18.04 and CentOS 8, the
	  following commands can be used instead of the previous ones that
	  don't work anymore:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
tiian@ubuntu1804:~$ sudo mysql -u root 
[sudo] password for tiian: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.7.22-0ubuntu18.04.1 (Ubuntu)

Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> CREATE USER 'lixa'@'localhost';
Query OK, 0 rows affected (0.02 sec)

mysql> GRANT ALL ON lixa.* TO 'lixa'@'localhost';
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE DATABASE lixa;
Query OK, 1 row affected (0.00 sec)

mysql> quit
Bye
	    </screen></td></tr></tbody>
	  </table>
	  The <systemitem class="username">lixa@localhost</systemitem> user
	  has been created with all privileges on the <quote>lixa</quote>
	  database. Now a sample table must be created using this new user:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
tiian@ubuntu1204-64:/tmp$ mysql -h localhost -u lixa lixa
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 37
Server version: 5.5.54-0ubuntu0.12.04.1 (Ubuntu)

Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SELECT DATABASE();
+------------+
| DATABASE() |
+------------+
| lixa       |
+------------+
1 row in set (0.01 sec)

mysql> CREATE TABLE authors (id INTEGER NOT NULL PRIMARY KEY, last_name TEXT, first_name TEXT) ENGINE=InnoDB;
Query OK, 0 rows affected (0.02 sec)

mysql> DESCRIBE authors;
+------------+---------+------+-----+---------+-------+
| Field      | Type    | Null | Key | Default | Extra |
+------------+---------+------+-----+---------+-------+
| id         | int(11) | NO   | PRI | NULL    |       |
| last_name  | text    | YES  |     | NULL    |       |
| first_name | text    | YES  |     | NULL    |       |
+------------+---------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM authors;
Empty set (0.00 sec)
	    </screen></td></tr></tbody>
	  </table>
	  OK, the <quote>authors</quote> table was created using 
	  the <quote>InnoDB</quote> engine. 
	  If something went wrong, you should refer to MySQL
	  documentation to fix the issue before the next step because
	  you would not be able to execute the sample program without a
	  basic running installation.
	</para>
      </section>
    </section>
  </section>
  <section xml:id="App_RM_Config_Oracle">
    <title>Oracle DMBS Configuration</title>
    <para>
      The following picture shows the overall architecture from the logical
      point of view.
      <figure xml:id="develop2">
	<title>Deploy model of an example with Oracle Database Server</title>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="../images/LIXA_App_RM_2.png"/>
	  </imageobject>
	</mediaobject>
      </figure>
    </para>
    <para>
      The configurations explained in this section was developed using
      different software versions: 
      <itemizedlist mark="bullet">
	<listitem><para>
	  Oracle Database 10g Release 2 and 11g Release 2 Express Edition 
	  using a <emphasis>local</emphasis> connection
	</para></listitem>
	<listitem><para>
	  Oracle Database 12c Release 1 (12.1) Standard Edition using a
	  <emphasis>remote (SqlNet)</emphasis> connection
	</para></listitem>
      </itemizedlist>
      If you use a different configuration, you will need to fix some of the
      details shown by these examples.
      <note><para>
	If you have not yet installed the software provided by Oracle,
	please refer to the official Oracle site to download the
	software and to pick-up the information necessary to install 
	and configure
	the database. This manual does not give you information related
	to Oracle technology: it is assumed that you have already installed 
	and configured the database.
      </para></note>
      <important><para>
	The LIXA software must be configured, compiled and installed to
	support the Oracle Database Server resource manager as explained in 
	<xref linkend="Linking_third_party_resource_managers"/>.
      </para></important>
    </para>
    <section xml:id="App_RM_Config_Oracle_Local">
      <title>Local configuration (Server) and OCI</title>
      <para>
	The following example is based on Oracle XE 10.2 and 11.2, but
	there shouldn't be too much differences with other Oracle
	versions.
      </para>
      <section>
	<title>Start-up the Oracle server</title>
	<para>
	  If the database server was not running, you can start it
	  with these commands
	  <screen>
tiian@ubuntu:~/tmp$ sudo /etc/init.d/oracle-xe enable
tiian@ubuntu:~/tmp$ sudo /etc/init.d/oracle-xe start
Starting Oracle Net Listener.
Starting Oracle Database 10g Express Edition Instance.
	  </screen>
	  on some systems, like Ubuntu 10.04, you use somethig like
	  this:
	  <screen>
tiian@ubuntu:~/tmp$ sudo service oracle-xe enable
tiian@ubuntu:~/tmp$ sudo service oracle-xe start
Starting Oracle Net Listener.
Starting Oracle Database 11g Express Edition Instance.
	  </screen>
	</para>
      </section>
      <section>
	<title>Create the XA related views</title>
	<para>
	  First of all you must be able to connect as <quote>SYSDBA</quote>
	  from a terminal session; the commands below show what happens when
	  I connect to the Oracle server using the user 
	  <systemitem class="username">sys</systemitem> with password
	  <quote>oracle</quote>
	  <footnote><para>
	    I put this line (Oracle 10.2 32 bit)
	    <computeroutput>. /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/oracle_env.sh</computeroutput>
	    or this line (Oracle 11.2 64 bit)
	    <computeroutput>. /u01/app/oracle/product/11.2.0/xe/bin/oracle_env.sh</computeroutput>
	    in the file <filename>$HOME/.profile</filename> of the
	    <systemitem class="username">oracle</systemitem> user to set-up
	    the default administration environment; it complains about
	    two shell errors, but for the sake of our example it's
	    safe.
	  </para></footnote>
	  <footnote><para>
	    If you got some errors like these:
	    <screen>
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/nls_lang.sh: 114: [[: not found
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/nls_lang.sh: 114: [[: not found
	    </screen>
	    you could edit the file <filename>/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/nls_lang.sh</filename> and substitute 
	    <computeroutput>#!/bin/sh</computeroutput> with
	    <computeroutput>#!/bin/bash</computeroutput> in the first row as explained 
	    here:
	    <link xlink:href="http://forums.oracle.com/forums/thread.jspa?messageID=1542334">http://forums.oracle.com/forums/thread.jspa?messageID=1542334</link>
	  </para></footnote>:
	  <screen>
tiian@ubuntu:~$ sudo su - oracle
oracle@ubuntu:~$ echo $ORACLE_HOME
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:23:56 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  You must check the file <filename>xaview.sql</filename>:
	  <screen>
oracle@ubuntu:~$ ls -la $ORACLE_HOME/rdbms/admin/xaview.sql
-rw-r--r-- 1 oracle dba 1754 2006-02-24 06:18 /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/rdbms/admin/xaview.sql
	  </screen>
	  It contains the SQL instructions necessary to create two specific
	  system views that could be not defined in your database; the
	  following commands are related to a database that contains
	  the desired views:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:32:45 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from v$pending_xatrans$;

no rows selected

SQL> select * from v$xatrans$;

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  If the command failed the views would be not defined and you
	  would get something like this:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Fri Apr 29 22:20:01 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from v$pending_xatrans$;
select * from v$pending_xatrans$
              *
ERROR at line 1:
ORA-00942: table or view does not exist


SQL> select * from v$xatrans$;
select * from v$xatrans$
              *
ERROR at line 1:
ORA-00942: table or view does not exist


SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  you can create them with a command like this:
	  <screen>
oracle@ubuntu:~$ cat $ORACLE_HOME/rdbms/admin/xaview.sql | sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Fri Apr 29 22:25:48 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> DROP VIEW v$xatrans$
*
ERROR at line 1:
ORA-00942: table or view does not exist


SQL> DROP VIEW v$pending_xatrans$
*
ERROR at line 1:
ORA-00942: table or view does not exist


SQL> SQL> SQL>   2    3    4    5    6    7    8
View created.

SQL> SQL> SQL> SQL>   2    3    4    5    6    7    8    9   10   11
View created.

SQL> SQL> SQL> Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	</para>
      </section>
      <section>
	<title>Authorize the XA related views</title>
	<para>
	  The example programs supplied by the LIXA project are designed
	  to use the 
	  <systemitem class="username">hr</systemitem> user; you 
	  <emphasis>must</emphasis> grant
	  the necessary privileges to all the users you want to use for
	  your Application Programs. The below commands show how to grant
	  the necessary privileges to
	  <systemitem class="username">hr</systemitem>:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:44:44 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> grant select on dba_pending_transactions to hr;

Grant succeeded.

SQL> grant select on v$pending_xatrans$ to hr;

Grant succeeded.

SQL> grant select on v$xatrans$ to hr;

Grant succeeded.

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	</para>
	<note><para>
	  If the user
	  <systemitem class="username">hr</systemitem> did not exist and
	  the above commands failed,
	  you should read Oracle documentation and pick-up the necessary
	  information to create it.
	</para></note>
      </section>
      <section>
	<title>Unlock <quote><systemitem class="username">hr</systemitem></quote> Oracle user</title>
	<para>
	  The example programs supplied by the LIXA project are designed
	  to use the 
	  <systemitem class="username">hr</systemitem> user; it might be 
	  <emphasis>locked</emphasis> after Oracle software installation.
	  The below commands show how to unlock it:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:44:44 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> ALTER USER hr ACCOUNT UNLOCK;

User altered.

SQL> ALTER USER hr IDENTIFIED BY hr;

User altered.

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  You may perform the same operation using the graphical (web 
	  based) interface.
	  <note><para>
	    Newer Oracle database versions set a default password limit: 
	    after such a limit, Oracle will start to issue
	    <command>ORA-28002</command> messages and XA functions will
	    return with an error like below:
	    <screen>
215229.2063.1888967424.1:
ORA-28002: the password will expire within 6 days

215229.2063.1888967424.1:
xaolgn: XAER_RMERR; logon failed. ORA-28002.

215229.2063.1888967424.1:
xaoopen: return -3
	    </screen>
	    To avoid this potential error, configure your users in the
	    right way.
	  </para></note>
	</para>
      </section>
      <section xml:id="App_RM_Config_Oracle_data_table">
	<title>Check the data table before execution</title>
	<para>
	  Execute the below commands to check the existence of table
	  <filename>countries</filename> and to create a new table with
	  name <filename>authors</filename>:
	  <screen>
tiian@ubuntu:~$ sqlplus "hr/hr"<footnote><para>
use <screen>sqlplus hr/hr@lixa_ora_db</screen> in the event that you are 
using a remote connection as explained above
</para></footnote>

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 14 22:04:55 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

no rows selected

SQL> CREATE TABLE hr.authors (
  2  id INTEGER NOT NULL UNIQUE,
  3  last_name VARCHAR2(20),
  4  first_name VARCHAR2(20));

Table created.

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  That's OK because the table does not contain the row we 
	  are going to insert.
	</para>
      </section>
      <section xml:id="App_RM_Config_Oracle_distributed_lock_timeout">
	<title>Change the value for DISTRIBUTED_LOCK_TIMEOUT</title>
	<para>
	  If you experience this type of error: 
	  <link xlink:href="http://www.dba-oracle.com/e_ora_02049_timeout_distributed_transaction.htm"><quote>
	    ORA-02049: time-out: distributed transaction waiting for lock
	    </quote></link>, especially after a
	  JDBC thin client used by XTA for Java crashed, you can 
	  <link xlink:href="https://allf1blog.wordpress.com/2016/04/20/ora-02049/">
	    change the system parameter</link> to reduce the number of caught
	    exceptions:
	  <screen>
[oracle@centos7-oracle12 ~]$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 12.1.0.2.0 Production on Wed Dec 19 16:41:54 2018

Copyright (c) 1982, 2014, Oracle.  All rights reserved.


Connected to:
Oracle Database 12c Standard Edition Release 12.1.0.2.0 - 64bit Production

SQL> SELECT name,value FROM v$parameter where NAME='distributed_lock_timeout' ;

NAME
--------------------------------------------------------------------------------
VALUE
--------------------------------------------------------------------------------
distributed_lock_timeout
60


SQL> ALTER SYSTEM SET distributed_lock_timeout=120 scope=spfile;

System altered.

SQL> commit;

Commit complete.
	  </screen>
	  The database instance must be restarted to activate the new value.
	</para>
	<warning><para>
	  The parameter has <emphasis>system</emphasis> wide scope: please 
	  check official documentation and/or contact support before proceding.
	</para></warning>
      </section>
    </section>
    <section xml:id="App_RM_Config_Oracle_Remote">
      <title>Remote configuration (Instant Client) and OCI</title>
      <note><para>
	This example has been tested using Ubuntu Server LTS 14.04
	and Oracle Instant Client 12.1
      </para></note>
      <para>
	Using a remote configuration instead of a local configuration
	introduces two differences:
	<itemizedlist mark="bullet">
	  <listitem><para>
	    the Oracle Database Server must be configured to be accessible
	    from another system: a <emphasis>listener</emphasis> must be
	    configured
	  </para></listitem>
	  <listitem><para>
	    the Oracle Instant Client software must be installed and 
	    configured in the system that will connect to the database
	  </para></listitem>
	</itemizedlist>
      </para>
      <section>
	<title>Set-up the Oracle environment (server side)</title>
	<para>
	  The first part of the Oracle Database Server is pretty the same
	  described in 
	  <xref linkend="App_RM_Config_Oracle_Local"/>.
	  All the statements remain valid for Oracle 12c Standard 
	  Edition with the exception of the paths. Here's a default path 
	  installation example:
	  <screen>
[oracle@centos7-oracle12 ~]$ ls -la $ORACLE_HOME/rdbms/admin/xaview.sql
-rw-r--r--. 1 oracle oinstall 1941 Apr 21  2011 /u01/app/oracle/product/12.1.0/dbhome_1/rdbms/admin/xaview.sql
	  </screen>	    
	</para>
      </section>
      <section xml:id="App_RM_configure_Oracle_listener">
	<title>Configure Oracle Listener</title>
	<warning><para>
	  Many recent Linux distributions, CentOS 7.x for example, 
	  automatically enable an internal firewall to prevent undesired 
	  accesses. If your firewall configuration does not allow Oracle 
	  traffic, you have no way to reach your database instance from 
	  a different system.
	</para></warning>
	<para>
	  Here's a very basic example that accepts incoming connection from
	  any network interface (IP address 0.0.0.0):
	  <screen>
[oracle@centos7-oracle12 ~]$ cat $ORACLE_HOME/network/admin/listener.ora

LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )
	  </screen>
	  You can check that the listener is accepting connection with this
	  command:
	  <screen>
[oracle@centos7-oracle12 ~]$ netstat -unta | grep 1521 | grep LISTEN
tcp        0      0 0.0.0.0:1521            0.0.0.0:*               LISTEN     
	  </screen>
	  and you can check a connection from a different system with 
	  something	like this (adjust your IP address, port and Global 
	  Database Name):
	  <screen>
tiian@ubuntu1404-64:~$ sqlplus hr/hr@192.168.122.81:1521/orcl.brenta.org

SQL*Plus: Release 12.1.0.2.0 Production on Fri Jan 13 21:50:46 2017

Copyright (c) 1982, 2014, Oracle.  All rights reserved.

Last Successful login time: Fri Jan 13 2017 21:36:05 +01:00

Connected to:
Oracle Database 12c Standard Edition Release 12.1.0.2.0 - 64bit Production

SQL> exit
Disconnected from Oracle Database 12c Standard Edition Release 12.1.0.2.0 - 64bit Production
	  </screen>
	</para>
      </section>
      <section xml:id="App_RM_install_Oracle_Instant_Client">
	<title>Install and configure Oracle Instant Client</title>
	<para>
	  Oracle Instant Client must be retrieved from Oracle portal. 
	  These are the suggested packages for version 12.1 if you want 
	  to use LIXA:
	  <screen>
instantclient-basic-linux.x64-12.1.0.2.0.zip
instantclient-precomp-linux.x64-12.1.0.2.0.zip
instantclient-sdk-linux.x64-12.1.0.2.0.zip
instantclient-sqlplus-linux.x64-12.1.0.2.0.zip
	  </screen>
	  For the Linux operating system you can choose between ".rpm" 
	  packages and ".zip" archives: feel free to install the packages 
	  that you prefer.
	  Just as an example, here's the final layout of a tested 
	  configuration using <filename>/opt/oracle</filename> as a prefix
	  <screen>
tiian@ubuntu1404-64:~/lixa$ find /opt/oracle/ | sort
/opt/oracle/
/opt/oracle/instantclient_12_1
/opt/oracle/instantclient_12_1/adrci
/opt/oracle/instantclient_12_1/BASIC_README
/opt/oracle/instantclient_12_1/cobsqlintf.o
/opt/oracle/instantclient_12_1/genezi
/opt/oracle/instantclient_12_1/glogin.sql
/opt/oracle/instantclient_12_1/libclntshcore.so.12.1
/opt/oracle/instantclient_12_1/libclntsh.so
/opt/oracle/instantclient_12_1/libclntsh.so.12.1
/opt/oracle/instantclient_12_1/libipc1.so
/opt/oracle/instantclient_12_1/libmql1.so
/opt/oracle/instantclient_12_1/libnnz12.so
/opt/oracle/instantclient_12_1/libocci.so
/opt/oracle/instantclient_12_1/libocci.so.12.1
/opt/oracle/instantclient_12_1/libociei.so
/opt/oracle/instantclient_12_1/libocijdbc12.so
/opt/oracle/instantclient_12_1/libons.so
/opt/oracle/instantclient_12_1/liboramysql12.so
/opt/oracle/instantclient_12_1/libsqlplusic.so
/opt/oracle/instantclient_12_1/libsqlplus.so
/opt/oracle/instantclient_12_1/network
/opt/oracle/instantclient_12_1/network/admin
/opt/oracle/instantclient_12_1/network/admin/tnsnames.ora
/opt/oracle/instantclient_12_1/ojdbc6.jar
/opt/oracle/instantclient_12_1/ojdbc7.jar
/opt/oracle/instantclient_12_1/precomp
/opt/oracle/instantclient_12_1/precomp/admin
/opt/oracle/instantclient_12_1/precomp/admin/pcbcfg.cfg
/opt/oracle/instantclient_12_1/precomp/admin/pcscfg.cfg
/opt/oracle/instantclient_12_1/PRECOMP_README
/opt/oracle/instantclient_12_1/sdk
/opt/oracle/instantclient_12_1/sdk/admin
/opt/oracle/instantclient_12_1/sdk/admin/oraaccess.xsd
/opt/oracle/instantclient_12_1/sdk/demo
/opt/oracle/instantclient_12_1/sdk/demo/cdemo81.c
/opt/oracle/instantclient_12_1/sdk/demo/demo.mk
/opt/oracle/instantclient_12_1/sdk/demo/demo_proc_ic.mk
/opt/oracle/instantclient_12_1/sdk/demo/demo_procob_ic.mk
/opt/oracle/instantclient_12_1/sdk/demo/occidemod.sql
/opt/oracle/instantclient_12_1/sdk/demo/occidemo.sql
/opt/oracle/instantclient_12_1/sdk/demo/occidml.cpp
/opt/oracle/instantclient_12_1/sdk/demo/occiobj.cpp
/opt/oracle/instantclient_12_1/sdk/demo/occiobj.typ
/opt/oracle/instantclient_12_1/sdk/demo/oraaccess.xml
/opt/oracle/instantclient_12_1/sdk/demo/procdemo.pc
/opt/oracle/instantclient_12_1/sdk/demo/procobdemo.pco
/opt/oracle/instantclient_12_1/sdk/demo/setuporamysql.sh
/opt/oracle/instantclient_12_1/sdk/include
/opt/oracle/instantclient_12_1/sdk/include/ldap.h
/opt/oracle/instantclient_12_1/sdk/include/nzerror.h
/opt/oracle/instantclient_12_1/sdk/include/nzt.h
/opt/oracle/instantclient_12_1/sdk/include/occiAQ.h
/opt/oracle/instantclient_12_1/sdk/include/occiCommon.h
/opt/oracle/instantclient_12_1/sdk/include/occiControl.h
/opt/oracle/instantclient_12_1/sdk/include/occiData.h
/opt/oracle/instantclient_12_1/sdk/include/occi.h
/opt/oracle/instantclient_12_1/sdk/include/occiObjects.h
/opt/oracle/instantclient_12_1/sdk/include/oci1.h
/opt/oracle/instantclient_12_1/sdk/include/oci8dp.h
/opt/oracle/instantclient_12_1/sdk/include/ociap.h
/opt/oracle/instantclient_12_1/sdk/include/ociapr.h
/opt/oracle/instantclient_12_1/sdk/include/ocidef.h
/opt/oracle/instantclient_12_1/sdk/include/ocidem.h
/opt/oracle/instantclient_12_1/sdk/include/ocidfn.h
/opt/oracle/instantclient_12_1/sdk/include/ociextp.h
/opt/oracle/instantclient_12_1/sdk/include/oci.h
/opt/oracle/instantclient_12_1/sdk/include/ocikpr.h
/opt/oracle/instantclient_12_1/sdk/include/ocixmldb.h
/opt/oracle/instantclient_12_1/sdk/include/ocixstream.h
/opt/oracle/instantclient_12_1/sdk/include/odci.h
/opt/oracle/instantclient_12_1/sdk/include/oraca.h
/opt/oracle/instantclient_12_1/sdk/include/oratypes.h
/opt/oracle/instantclient_12_1/sdk/include/orid.h
/opt/oracle/instantclient_12_1/sdk/include/ori.h
/opt/oracle/instantclient_12_1/sdk/include/orl.h
/opt/oracle/instantclient_12_1/sdk/include/oro.h
/opt/oracle/instantclient_12_1/sdk/include/ort.h
/opt/oracle/instantclient_12_1/sdk/include/sql2oci.h
/opt/oracle/instantclient_12_1/sdk/include/sqlapr.h
/opt/oracle/instantclient_12_1/sdk/include/sqlca.h
/opt/oracle/instantclient_12_1/sdk/include/sqlcpr.h
/opt/oracle/instantclient_12_1/sdk/include/sqlda.h
/opt/oracle/instantclient_12_1/sdk/include/sqlkpr.h
/opt/oracle/instantclient_12_1/sdk/include/sqlucs2.h
/opt/oracle/instantclient_12_1/sdk/include/xa.h
/opt/oracle/instantclient_12_1/sdk/ott
/opt/oracle/instantclient_12_1/sdk/ottclasses.zip
/opt/oracle/instantclient_12_1/sdk/proc
/opt/oracle/instantclient_12_1/sdk/procob
/opt/oracle/instantclient_12_1/sdk/rtsora
/opt/oracle/instantclient_12_1/sdk/SDK_README
/opt/oracle/instantclient_12_1/sqlplus
/opt/oracle/instantclient_12_1/SQLPLUS_README
/opt/oracle/instantclient_12_1/uidrvci
/opt/oracle/instantclient_12_1/xstreams.jar
          </screen>
	  If your installation layout is different, adjust the following 
	  steps as necessary.
	</para>
	<para>
	  Oracle Instant Client does not provide 
	  <filename>oracle_env.sh</filename>, but some
	  environment variables can be very handy and it is suggested you to
	  create your own <filename>oracle_env.sh</filename> as below:
	  <screen>
#!/bin/sh
export LD_LIBRARY_PATH=/opt/oracle/instantclient_12_1:$LD_LIBRARY_PATH
export PATH=/opt/oracle/instantclient_12_1:/opt/oracle/instantclient_12_1/sdk:$PATH
export ORACLE_HOME=/opt/oracle/instantclient_12_1
	  </screen>
	  and to put it inside Oracle Instant Client base directory
	  <footnote><para>
	    LIXA test suite, based on <command>autotest</command> looks for
	    it: if it's not available, Oracle's tests are skipped.
	    </para></footnote>:
	    <screen>
tiian@ubuntu1404-64:~/lixa$ ls -la /opt/oracle/instantclient_12_1/oracle_env.sh
-rwxr-xr-- 1 root root 216 mar 10 21:57 /opt/oracle/instantclient_12_1/oracle_env.sh
	    </screen>
	    Use it when it's needed with shell sourcing:
	    <screen>
tiian@ubuntu1404-64:~$ . /opt/oracle/instantclient_12_1/oracle_env.sh 
tiian@ubuntu1404-64:~$ echo $LD_LIBRARY_PATH
/opt/oracle/instantclient_12_1:
tiian@ubuntu1404-64:~$ echo $PATH
/opt/oracle/instantclient_12_1:/opt/oracle/instantclient_12_1/sdk:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
tiian@ubuntu1404-64:~$ echo $ORACLE_HOME
/opt/oracle/instantclient_12_1
	    </screen>
	    A possible option to configure a remote database is based on the 
	    "tnsnames.ora" file. It should be put at path 
	    <filename>$ORACLE_HOME/network/admin/tnsnames.ora</filename>
	    Here's an example:
	    <screen>
lixa_ora_db=
  (DESCRIPTION=
     (ADDRESS=(PROTOCOL=tcp)(HOST=centos7-oracle12.brenta.org)(PORT=1521))
     (CONNECT_DATA=
        (SERVICE_NAME=orcl.brenta.org)))
	    </screen>
	    <note><para>
	      Configuring Oracle networking feature requires a little bit of
	      experience: be patient and consult official documentation and
	      user group forums to obtain a working configuration.
	    </para></note>
	    <important><para>
	      This example configuration uses <filename>lixa_ora_db</filename>
	      as the name understood by the Instant Client to reach the
	      database server.
	    </para></important>
	  </para>
	  <para>
	    The final step is the configuration check. If everything is OK, you
	    should obtain something like this:
	    <screen>
tiian@ubuntu1404-64:~$ sqlplus hr/hr@lixa_ora_db

SQL*Plus: Release 12.1.0.2.0 Production on Fri Jan 13 21:36:05 2017

Copyright (c) 1982, 2014, Oracle.  All rights reserved.

Last Successful login time: Fri Jan 13 2017 21:35:16 +01:00

Connected to:
Oracle Database 12c Standard Edition Release 12.1.0.2.0 - 64bit Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

no rows selected

SQL> exit
Disconnected from Oracle Database 12c Standard Edition Release 12.1.0.2.0 - 64bit Production
	  </screen>
	</para>
	<para>
	  See the instructions reported in 
	  <xref linkend="App_RM_Config_Oracle_data_table"/> to configure the
	  tables necessary for examples execution.
	</para>
      </section>
    </section>
  </section>
  <section xml:id="App_RM_Config_PostgreSQL">
    <title>PostgreSQL Configuration</title>
    <para>
      The following diagram represents a simplified vision of the components
      necessary to run an example program (<filename>example5_mys</filename>
      in the picture) that uses PostgreSQL as an XA Resource Manager.
    </para>
    <figure xml:id="develop5">
      <title>Deploy model of an example with PostgreSQL DBMS</title>
      <mediaobject>
	<imageobject>
	  <imagedata fileref="../images/LIXA_App_RM_5.png"/>
	</imageobject>
      </mediaobject>
    </figure>
    <para>
      This section has been developed using PostgreSQL 9.1.24 (and upper)
      for Linux. Here is a brief list of the tested versions for Ubuntu
      12.04, 14.04, 16.04, 18.04 and CentOS/RHEL 7.3, CentOS 8 and the
      installed packages:
      <screen>
tiian@ubuntu1204-64:/tmp$ dpkg -l | grep -i -e pq -e postgresql
ii  libpq-dev                        9.1.24-0ubuntu0.12.04               header files for libpq5 (PostgreSQL library)
ii  libpq5                           9.1.24-0ubuntu0.12.04               PostgreSQL C client library
ii  postgresql                       9.1+129ubuntu1                      object-relational SQL database (supported version)
ii  postgresql-9.1                   9.1.24-0ubuntu0.12.04               object-relational SQL database, version 9.1 server
ii  postgresql-client-9.1            9.1.24-0ubuntu0.12.04               front-end programs for PostgreSQL 9.1
ii  postgresql-client-common         129ubuntu1                          manager for multiple PostgreSQL client versions
ii  postgresql-common                129ubuntu1                          PostgreSQL database-cluster manager

tiian@ubuntu1404-64:/tmp$ dpkg -l | grep -i -e pq -e postgresql
ii  libpq-dev                           9.3.16-0ubuntu0.14.04               amd64        header files for libpq5 (PostgreSQL library)
ii  libpq5                              9.3.16-0ubuntu0.14.04               amd64        PostgreSQL C client library
ii  postgresql                          9.3+154ubuntu1                      all          object-relational SQL database (supported version)
ii  postgresql-9.3                      9.3.16-0ubuntu0.14.04               amd64        object-relational SQL database, version 9.3 server
ii  postgresql-client-9.3               9.3.16-0ubuntu0.14.04               amd64        front-end programs for PostgreSQL 9.3
ii  postgresql-client-common            154ubuntu1                          all          manager for multiple PostgreSQL client versions
ii  postgresql-common                   154ubuntu1                          all          PostgreSQL database-cluster manager

tiian@ubuntu1604:~$ dpkg -l | grep -i -e pq -e postgresql
ii  libpq-dev                          9.5.6-0ubuntu0.16.04                amd64        header files for libpq5 (PostgreSQL library)
ii  libpq5:amd64                       9.5.6-0ubuntu0.16.04                amd64        PostgreSQL C client library
ii  postgresql                         9.5+173                             all          object-relational SQL database (supported version)
ii  postgresql-9.5                     9.5.6-0ubuntu0.16.04                amd64        object-relational SQL database, version 9.5 server
ii  postgresql-client-9.5              9.5.6-0ubuntu0.16.04                amd64        front-end programs for PostgreSQL 9.5
ii  postgresql-client-common           173                                 all          manager for multiple PostgreSQL client versions
ii  postgresql-common                  173                                 all          PostgreSQL database-cluster manager
ii  postgresql-contrib-9.5             9.5.6-0ubuntu0.16.04                amd64        additional facilities for PostgreSQL

tiian@ubuntu1804:~$ dpkg -l | grep -i -e pq -e postgresql
ii  libpq-dev                             10.3-1                             amd64        header files for libpq5 (PostgreSQL library)
ii  libpq5:amd64                          10.3-1                             amd64        PostgreSQL C client library
ii  postgresql                            10+190                             all          object-relational SQL database (supported version)
ii  postgresql-10                         10.3-1                             amd64        object-relational SQL database, version 10 server
ii  postgresql-client-10                  10.3-1                             amd64        front-end programs for PostgreSQL 10
ii  postgresql-client-common              190                                all          manager for multiple PostgreSQL client versions
ii  postgresql-common                     190                                all          PostgreSQL database-cluster manager

[tiian@centos71-64 tmp]$ rpm -qa | grep -i -e pq -e postgresql
postgresql-libs-9.2.18-1.el7.x86_64
postgresql-devel-9.2.18-1.el7.x86_64
postgresql-9.2.18-1.el7.x86_64
postgresql-server-9.2.18-1.el7.x86_64

[tiian@rhel73 tmp]$ rpm -qa | grep -i -e pq -e postgresql
postgresql-devel-9.2.18-1.el7.x86_64
postgresql-9.2.18-1.el7.x86_64
postgresql-server-9.2.18-1.el7.x86_64
postgresql-libs-9.2.18-1.el7.x86_64

[tiian@centos8 tmp]$ rpm -qa | grep -i -e pq -e postgresql
postgresql-server-10.14-1.module_el8.2.0+487+53cc39ce.x86_64
libpq-12.4-1.el8_2.x86_64
postgresql-jdbc-42.2.3-3.el8_2.noarch
libpq-devel-12.4-1.el8_2.x86_64
postgresql-10.14-1.module_el8.2.0+487+53cc39ce.x86_64
      </screen>
      If you were using a different version you would need to adapt some
      commands to your environment.
    </para>
    <note><para>
      If you did not yet installed the software, please refer to the 
      official site for your Linux distribution or to the official site
      of PostgreSQL if your operating system does not distribute the
      software or you want to use a different PostgreSQL version.
      This manual does not give you information related
      to PostgreSQL: it is assumed that you have already installed and
      configured the database.
    </para></note>
    <note><para>
      This example requires you are running the database and the application
      on the same host: this is not a technical limitation, but a way to
      make it easy. Client/server configuration must work as well, but
      it needs some PostgreSQL extra configuration: please refer to the
      database documentation.
    </para></note>
    <important><para>
      The LIXA software must be configured to support the PostgreSQL
      server resource manager as explained in 
      <xref linkend="Linking_third_party_resource_managers"/>.
    </para></important>
    <section xml:id="App_RM_setup_PostgreSQL_environment">
      <title>Set-up PostgreSQL environment</title>
      <section>
	<title>Start-up the PostgreSQL server</title>
	<para>
	  If your server didn't start-up automatically at boot time, you
	  could start it with the following commands for Ubuntu:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
tiian@ubuntu1204-64:~$ sudo service postgresql status
Running clusters: 
tiian@ubuntu1204-64:~$ ps -ef|grep postgres|grep -v grep
tiian@ubuntu1204-64:~$ sudo service postgresql start
 * Starting PostgreSQL 9.1 database server                               [ OK ]
tiian@ubuntu1204-64:~$ sudo service postgresql status
Running clusters: 9.1/main 
tiian@ubuntu1204-64:~$ ps -ef|grep postgres|grep -v grep
postgres  1829     1  1 23:00 ?        00:00:00 /usr/lib/postgresql/9.1/bin/postgres -D /var/lib/postgresql/9.1/main -c config_file=/etc/postgresql/9.1/main/postgresql.conf
postgres  1831  1829  0 23:00 ?        00:00:00 postgres: writer process
postgres  1832  1829  0 23:00 ?        00:00:00 postgres: wal writer process
postgres  1833  1829  0 23:00 ?        00:00:00 postgres: autovacuum launcher process
postgres  1834  1829  0 23:00 ?        00:00:00 postgres: stats collector process
	    </screen></td></tr></tbody>
	  </table>
	  or with the following ones for CentOS:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
[tiian@centos8 tmp]$ sudo /usr/bin/postgresql-setup --initdb
 * Initializing database in '/var/lib/pgsql/data'
 * Initialized, logs are in /var/lib/pgsql/initdb_postgresql.log
[tiian@centos8 tmp]$ sudo systemctl start postgresql.service
[tiian@centos8 tmp]$ sudo systemctl enable postgresql.service
Created symlink /etc/systemd/system/multi-user.target.wants/postgresql.service ‚Üí /usr/lib/systemd/system/postgresql.service.
[tiian@centos8 tmp]$ ps -ef|grep postgres|grep -v grep
postgres    2254       1  0 15:23 ?        00:00:00 /usr/bin/postmaster -D /var/lib/pgsql/data
postgres    2256    2254  0 15:23 ?        00:00:00 postgres: logger process   
postgres    2258    2254  0 15:23 ?        00:00:00 postgres: checkpointer process   
postgres    2259    2254  0 15:23 ?        00:00:00 postgres: writer process   
postgres    2260    2254  0 15:23 ?        00:00:00 postgres: wal writer process   
postgres    2261    2254  0 15:23 ?        00:00:00 postgres: autovacuum launcher process   
postgres    2262    2254  0 15:23 ?        00:00:00 postgres: stats collector process   
postgres    2263    2254  0 15:23 ?        00:00:00 postgres: bgworker: logical replication launcher   
[tiian@centos8 tmp]$ sudo systemctl status postgresql.service
‚óè postgresql.service - PostgreSQL database server
   Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: disabled)
   Active: active (running) since Sun 2020-10-11 15:23:45 CEST; 3min 7s ago
 Main PID: 2254 (postmaster)
    Tasks: 8 (limit: 11477)
   Memory: 16.3M
   CGroup: /system.slice/postgresql.service
           ‚îú‚îÄ2254 /usr/bin/postmaster -D /var/lib/pgsql/data
           ‚îú‚îÄ2256 postgres: logger process   
           ‚îú‚îÄ2258 postgres: checkpointer process   
           ‚îú‚îÄ2259 postgres: writer process   
           ‚îú‚îÄ2260 postgres: wal writer process   
           ‚îú‚îÄ2261 postgres: autovacuum launcher process   
           ‚îú‚îÄ2262 postgres: stats collector process   
           ‚îî‚îÄ2263 postgres: bgworker: logical replication launcher   

Oct 11 15:23:44 centos8 systemd[1]: Starting PostgreSQL database server...
Oct 11 15:23:44 centos8 postmaster[2254]: 2020-10-11 15:23:44.877 CEST [2254] LOG:  listening on IPv6 address "::1", port 5432
Oct 11 15:23:44 centos8 postmaster[2254]: 2020-10-11 15:23:44.877 CEST [2254] LOG:  listening on IPv4 address "127.0.0.1", port 5432
Oct 11 15:23:44 centos8 postmaster[2254]: 2020-10-11 15:23:44.893 CEST [2254] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
Oct 11 15:23:44 centos8 postmaster[2254]: 2020-10-11 15:23:44.935 CEST [2254] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
Oct 11 15:23:44 centos8 postmaster[2254]: 2020-10-11 15:23:44.957 CEST [2254] LOG:  redirecting log output to logging collector process
Oct 11 15:23:44 centos8 postmaster[2254]: 2020-10-11 15:23:44.957 CEST [2254] HINT:  Future log output will appear in directory "log".
Oct 11 15:23:45 centos8 systemd[1]: Started PostgreSQL database server.
	    </screen></td></tr></tbody>
	  </table>
	  Switch to user <systemitem class="username">postgres</systemitem>,
	  associate your user to a matching database user
	  <footnote><para>
	    If you wanted to use a database user different than your own
	    UNIX user, as it ever happens when the database is hosted on
	    a different system, you should configure
	    <filename>pg_hba.conf</filename> as well. Look at the PostgreSQL
	    documentation to pick up all the necessary details.
	  </para></footnote>
	  ; my personal account is 
	  <systemitem class="username">tiian</systemitem>
	  and I created the same user inside PostgreSQL database:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
tiian@ubuntu1204-64:~$ sudo su - postgres
[sudo] password for tiian:
postgres@ubuntu1204-64:~$ createuser --createdb tiian
Shall the new role be a superuser? (y/n) n
Shall the new role be allowed to create more new roles? (y/n) n
postgres@ubuntu1204-64:~$ exit
logout
	    </screen></td></tr></tbody>
	  </table>
	  Even if most of the examples use local connection, for JDBC it's
	  necessary even a host connection; verify that config file
	  <filename>pg_hba.conf</filename> contains a couple of rows like the
	  following ones:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
host    all             all             127.0.0.1/32            md5
host    all             all             ::1/128                 md5
	    </screen></td></tr></tbody>
	  </table>
	  and assign your user a password inside PostgreSQL database:
	  <table frame="box">
	    <thead><tr><td>[Shell terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
tiian@ubuntu1404-64:~/lixa$ sudo su - postgres
postgres@ubuntu1404-64:~$ psql
psql (9.3.24)
Type "help" for help.

postgres=# ALTER USER tiian WITH PASSWORD 'passw0rd';
ALTER ROLE
postgres=# \q
	    </screen></td></tr></tbody>
	  </table>
	  Create a new database and a table necessary to store some data:
	  <table frame="box">
	    <thead><tr><td>[PostgreSQL terminal session]</td></tr></thead>
	    <tbody><tr><td><screen>
[tiian@centos8 tmp]$ createdb testdb
[tiian@centos8 tmp]$ psql testdb
psql (10.14)
Type "help" for help.

testdb=> CREATE TABLE "authors" ("id" integer NOT NULL,"last_name" text,"first_name" text,Constraint "authors_pkey" Primary Key ("id"));
CREATE TABLE
testdb=> select * from authors;
 id | last_name | first_name 
----+-----------+------------
(0 rows)

testdb=> \q
	    </screen></td></tr></tbody>
	  </table>
	  OK, the <quote>authors</quote> table was created. 
	  If something went wrong, you should refer to PostgreSQL
	  documentation to fix the issue before the next step because
	  you would not be able to execute the sample program without a
	  basic running installation.
	</para>
	<para>
	  Change the 
	  <systemitem class="constant">max_prepared_transactions</systemitem>
	  parameter in file
	  <filename>postgresql.conf</filename>
	  to allow the desired number of prepared transactions (i.e. 10):
	  <screen>
shared_buffers = 24MB                   # min 128kB
                                        # (change requires restart)
#temp_buffers = 8MB                     # min 800kB
max_prepared_transactions = 10          # zero disables the feature
#max_prepared_transactions = 0          # zero disables the feature
                                        # (change requires restart)
# Note:  Increasing max_prepared_transactions costs ~600 bytes of shared memory
# per transaction slot, plus lock space (see max_locks_per_transaction).
# It is not advisable to set max_prepared_transactions nonzero unless you
# actively intend to use prepared transactions.
#work_mem = 1MB                         # min 64kB
#maintenance_work_mem = 16MB            # min 1MB
#max_stack_depth = 2MB                  # min 100kB
	  </screen>
	  and restart the PostgreSQL server with something like
	  <screen>service postgresql restart</screen> (Ubuntu) or
	  <screen>systemctl restart postgresql.service</screen> (CentOS)
	  using
	  <systemitem class="username">root</systemitem> user.
	</para>
      </section>
    </section>
  </section>
</appendix>
  
