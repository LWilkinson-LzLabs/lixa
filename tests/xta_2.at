AT_BANNER([XTA: Suspend and Resume])

# This case tests needs Oracle because MySQL and PostgreSQL don't support
# XA Suspend/Resume

# First step:
# - create a new transaction (XID)
# - insert a row in the table
# - suspend the transaction for migrate
AT_SETUP([XTA/2.0/0.0 Insert and Suspend])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
AT_CHECK([if test "$HAVE_ORACLE" = "no"; then exit 77; fi])
AT_CHECK([export LIXA_TRACE_MASK=0x00000020 ; export LIXA_PROFILE=CASE_PROF_0008 ; lixa_test_exec.sh reset start case0102 0 1 1 0 $TESTS_TMP_FILE1 2>&1], [0], [ignore], [ignore])
AT_CLEANUP

# Second step:
# - resume the previous transaction (XID)
# - delete the row from the table
# - suspend again
AT_SETUP([XTA/2.0/0.1 Resume and Delete])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
AT_CHECK([if test "$HAVE_ORACLE" = "no"; then exit 77; fi])
AT_CHECK([export LIXA_TRACE_MASK=0x00000020 ; export LIXA_PROFILE=CASE_PROF_0008 ; lixa_test_exec.sh noreset none case0102 1 0 1 0 $TESTS_TMP_FILE1 2>&1], [0], [ignore], [ignore])
AT_CLEANUP

# Third step:
# - resume the previous transaction (XID)
# - insert the row in the table
# - rollback
AT_SETUP([XTA/2.0/0.2 Resume, Insert and Rollback])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
AT_CHECK([if test "$HAVE_ORACLE" = "no"; then exit 77; fi])
AT_CHECK([export LIXA_TRACE_MASK=0x00000020 ; export LIXA_PROFILE=CASE_PROF_0008 ; lixa_test_exec.sh noreset none case0102 2 1 0 0 $TESTS_TMP_FILE1 2>&1], [0], [ignore], [ignore])
AT_CLEANUP

# Redo with commit

# First step:
# - create a new transaction (XID)
# - insert a row in the table
# - suspend the transaction for migrate
AT_SETUP([XTA/2.0/1.0 Insert and Suspend])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
AT_CHECK([if test "$HAVE_ORACLE" = "no"; then exit 77; fi])
AT_CHECK([export LIXA_TRACE_MASK=0x00000020 ; export LIXA_PROFILE=CASE_PROF_0008 ; lixa_test_exec.sh noreset none case0102 0 1 1 0 $TESTS_TMP_FILE1 2>&1], [0], [ignore], [ignore])
AT_CLEANUP

# Second step:
# - resume the previous transaction (XID)
# - delete the row from the table
# - suspend again
AT_SETUP([XTA/2.0/1.1 Resume and Delete])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
AT_CHECK([if test "$HAVE_ORACLE" = "no"; then exit 77; fi])
AT_CHECK([export LIXA_TRACE_MASK=0x00000020 ; export LIXA_PROFILE=CASE_PROF_0008 ; lixa_test_exec.sh noreset none case0102 1 0 1 0 $TESTS_TMP_FILE1 2>&1], [0], [ignore], [ignore])
AT_CLEANUP

# Third step:
# - resume the previous transaction (XID)
# - insert the row in the table
# - commit
AT_SETUP([XTA/2.0/1.2 Resume, Insert and Commit])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
AT_CHECK([if test "$HAVE_ORACLE" = "no"; then exit 77; fi])
AT_CHECK([export LIXA_TRACE_MASK=0x00000020 ; export LIXA_PROFILE=CASE_PROF_0008 ; lixa_test_exec.sh noreset none case0102 2 1 1 0 $TESTS_TMP_FILE1 2>&1], [1], [ignore], [ignore])
AT_CLEANUP

# Try to resume the XID again... it must return an error!!!
# - resume the previous transaction (XID)
AT_SETUP([XTA/2.0/2.0 Resume a committed XID])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
AT_CHECK([if test "$HAVE_ORACLE" = "no"; then exit 77; fi])
AT_CHECK([export LIXA_TRACE_MASK=0x00000020 ; export LIXA_PROFILE=CASE_PROF_0008 ; lixa_test_exec.sh noreset none case0102 1 0 1 0 $TESTS_TMP_FILE1 2>&1], [1], [ignore], [ignore])
AT_CLEANUP

# clean-up the table
AT_SETUP([XTA/2.0/2.1 Delete and commit])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
AT_CHECK([export LIXA_TRACE_MASK=0x00000020 ; export LIXA_PROFILE=CASE_PROF_0008 ; lixa_test_exec.sh noreset stop case0100 1 0 0 2>&1], [0], [ignore], [ignore])
AT_CLEANUP

